You are given an array prices where prices[i] is the price of a given stock on the ith day.

You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0


  class Solution {
public:
    int maxProfit(vector<int>& prices) {
          int minPrice = INT_MAX; // Initialize the minimum price to a very large number
    int maxProfit = 0;      // Initialize the maximum profit to 0

    for (int i = 0; i < prices.size(); i++) { // Standard for loop with index
        if (prices[i] < minPrice) {
            minPrice = prices[i]; // Update minimum price if the current price is smaller
        } else {
            maxProfit = max(maxProfit, prices[i] - minPrice); // Calculate and update max profit
        }
    }

    return maxProfit;
    }
};
