You are given a 0-indexed 2D integer matrix grid of size n * n with values in the range [1, n2]. Each integer appears exactly once except a which appears twice and b which is missing. The task is to find the repeating and missing numbers a and b.

Return a 0-indexed integer array ans of size 2 where ans[0] equals to a and ans[1] equals to b.


  class Solution {
public:
    vector<int> findMissingAndRepeatedValues(vector<vector<int>>& a) {
       
        int nc=a.size(),nr=a[0].size(),r=nc*nr;
        vector<int>a1(r,0);
        vector<int>k(2);
        int i,j;
        
         for(i=0;i<nc;i++)
       {
        for(j=0;j<nr;j++)
        {
            a[i][j]--;
        }
       }
       for(i=0;i<nc;i++)
       {
        for(j=0;j<nr;j++)
        {
            int t=a[i][j];
            a1[t]++;
        }
       }
       for(i=0;i<r;i++)
       {
        if(a1[i]==2)
        k[0]=i+1;
        if(a1[i]==0)
        k[1]=i+1;
       }
       return k;
    }
};
