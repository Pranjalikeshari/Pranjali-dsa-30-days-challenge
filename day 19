Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 class Solution {
public:
    string reverseWords(string s) {
        vector<string> words;
    string word;
    
    // Traverse through the string to extract words
    for (int i = 0; i < s.size(); i++) {
        if (s[i] != ' ') {
            word += s[i];  // Build the current word
        } else if (!word.empty()) {
            words.push_back(word);  // Add completed word to the vector
            word.clear();  // Clear word for the next word
        }
    }
    
    // Don't forget to add the last word if any
    if (!word.empty()) {
        words.push_back(word);
    }

    // Build the reversed string
    string result;
    for (int i = words.size() - 1; i >= 0; --i) {
        result += words[i];  // Add the word
        if (i > 0) {
            result += " ";  // Add space between words
        }
    }

    return result;
    }
};
