You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).

Find two lines that together with the x-axis form a container, such that the container contains the most water.

Return the maximum amount of water a container can store.

Notice that you may not slant the container.

 

class Solution {
public:
    int maxArea(vector<int>& h) {
       int start=0,end=h.size()-1,min,width,ans=0,max1=0;
       while(start<end)
       {
              if(h[start]<h[end])
              min=h[start];
              else
              min=h[end];

              width=end-start;
              ans=min*width;

              max1=max(max1,ans);

              if(h[start]<h[end])
              start++;
              else
              end--;
       }

       return max1;
    }
};
