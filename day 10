Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.
  Example 1:
Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.
Example 2:

Input: height = [4,2,0,3,2,5]
Output: 9

  class Solution {
public:
    int trap(vector<int>& h) {
       int index,i,j,maxi=h[0],sum=0;
       for(i=1;i<h.size();i++)
       {
            if(maxi<h[i])
            {
                 maxi=h[i];
                 index=i;
            }

       }

       //left part
       int k=index,leftmax=0;
       for(i=0;i<k;i++)
       {
           if(leftmax>h[i])
            sum=sum+(leftmax-h[i]);

            else
            leftmax=h[i];
          
       }
       //right part

      int rightmax=0;
       for(i=h.size()-1;i>k;i--)
       {
           if(rightmax>h[i])
            sum=sum+(rightmax-h[i]);
           
           else
           rightmax=h[i];
       }

       return sum;
    }
};
